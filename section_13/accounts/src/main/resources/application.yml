server:
    port: 8080

spring:
   application:
      name: "accounts"
   profiles:
      active: "prod"
   datasource:
      url: jdbc:h2:mem:testdb
      driver-class-name: org.h2.Driver
      username: sa
      password: ''
   h2:
      console:
        enabled: true
        path: /h2-console
   jpa:
      database-platform: org.hibernate.dialect.H2Dialect
      hibernate:
        ddl-auto: update
        show-sql: true
   config:
     import: "optional:configserver:http://localhost:8071/"
   cloud:
     openfeign:
       circuitbreaker:
         enabled: true
     stream:
       bindings:
         sendCommunication-out-0:
           destination: send-communication
   rabbitmq:
     host: localhost
     port: 5672
     username: guest
     password: guest
     connection-timeout: 10s

management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  endpoint:
    shutdown:
      enabled: true
    health:
      probes:
        enabled: true
  info:
    env:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}

endpoints:
  shutdown:
    enabled: true


eureka:
  instance:
    preferIpAddress: true
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://localhost:8070/eureka/

info:
  app:
    name: "accounts"
    description: "Eazy Bank Accounts Application"
    version: "1.0.0"

logging:
  level:
    com:
      jay:
        accounts: DEBUG
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"

resilience4j.circuitbreaker:
  configs:
    defaults:
      sliding-window-size: 10
      permitted-number-of-calls-in-half-open-state: 2
      failure-rate-threshold: 50
      wait-duration-in-open-state:
        seconds: 10

resilience4j.retry:
  configs:
    default:
      maxRetryAttempts: 3
      waitDuration: 100
      enableExponentialBackoff: true
      exponentialBackoffMultiplier: 2
      ignoreExceptions:
        - java.lang.NullPointerException
      retryExceptions:
        - java.util.concurrent.TimeoutException

resilience4j.ratelimiter:
  configs:
    default:
      timeoutDuration: 1000
      limitRefreshPeriod: 5000
      limitForPeriod: 1